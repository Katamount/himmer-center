AWSTemplateFormatVersion: 2010-09-09
Description: A basic CloudFormation template for an RDS Aurora cluster.
Parameters:
  EC2InstanceType:
    Type: String
    Default: t2.micro
    Description: Type of Instance for EC2 Webserver
  KeyPair:
    Type: String
    Default: webserver
    Description: The name of the EC2 key pair. Must be created manually beforehand.
Resources:
  # VPC configuration
  # VPC: 
  #   Type: AWS::EC2::VPC
  #   Properties: 
  #     CidrBlock: 10.0.0.0/16
  #     EnableDnsHostnames: True
  #     EnableDnsSupport: True
  
  # InternetGateway:
  #   Type: AWS::EC2::InternetGateway

  # AttachGateway:
  #   Type: AWS::EC2::VPCGatewayAttachment
  #   Properties:
  #     VpcId:
  #       Ref: VPC
  #     InternetGatewayId:
  #       Ref: InternetGateway

  # EC2 Configurations
  EIP:
    # DependsOn: AttachGateway
    Type: AWS::EC2::EIP
    # Properties:
    #   Domain: vpc
  EIPAssoc:
    Type: AWS::EC2::EIPAssociation
    Properties: 
      AllocationId: !GetAtt EIP.AllocationId
      InstanceId: 
        Ref: EC2
  EC2:
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: ami-05c1fa8df71875112
      InstanceType: 
        Ref: EC2InstanceType
      KeyName:
        Ref: KeyPair 
      SecurityGroups:
        - Ref: WebserverSecurityGroup
      AvailabilityZone: us-east-2a
      # PrivateIpAddress: 10.0.0.16
      # SubnetId:
      #   Ref: Subnet1
      BlockDeviceMappings:
        - DeviceName: "/dev/sda1"
          Ebs:
            VolumeSize: 8
  # EBS:
  #   Type: AWS::EC2::Volume
  #   Properties: 
  #     AvailabilityZone: us-east-2a
  #     Size: 5
  # EBSAttachment:
  #   Type: AWS::EC2::VolumeAttachment
  #   Properties: 
  #     Device: /dev/sda1 
  #     InstanceId: 
  #       Ref: EC2
  #     VolumeId: 
  #       Ref: EBS
    
  # Network configurations
  WebserverSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      # VpcId: 
      #   Ref: "VPC"
      GroupDescription: Security group for Webserver EC2
      GroupName: WordpressSecurityGroup
      # SecurityGroupEgress: 
      #   - CidrIp: "0.0.0.0/0"
      #     IpProtocol: -1
      #     FromPort: 0
      #     ToPort: 65000
      SecurityGroupIngress:
        - CidrIp: "0.0.0.0/0"
          IpProtocol: TCP
          FromPort: 80
          ToPort: 80
        - CidrIp: "0.0.0.0/0"
          IpProtocol: TCP
          FromPort: 443
          ToPort: 443
        - CidrIp: "0.0.0.0/0"
          IpProtocol: TCP
          FromPort: 22
          ToPort: 22
  # Subnet1:
  #   Type: AWS::EC2::Subnet
  #   Properties: 
  #     AvailabilityZone: "us-east-2a"
  #     CidrBlock: 10.0.0.0/25
  #     MapPublicIpOnLaunch: True
  #     VpcId: 
  #       Ref: "VPC"
  # Subnet2:
  #   Type: AWS::EC2::Subnet
  #   Properties: 
  #     AvailabilityZone: "us-east-2b"
  #     CidrBlock: 10.0.0.128/25
  #     MapPublicIpOnLaunch: True
  #     VpcId: 
  #       Ref: "VPC"
  # RouteTable:
  #   Type: AWS::EC2::RouteTable
  #   Properties:
  #     VpcId:  
  #       Ref: VPC
  # Subnet1RTA:
  #   Type: AWS::EC2::SubnetRouteTableAssociation
  #   Properties: 
  #     RouteTableId: 
  #       Ref: RouteTable
  #     SubnetId: 
  #       Ref: Subnet1
  # Subnet2RTA:
  #   Type: AWS::EC2::SubnetRouteTableAssociation
  #   Properties: 
  #     RouteTableId: 
  #       Ref: RouteTable
  #     SubnetId: 
  #       Ref: Subnet2
  # IGRoute:
  #   Type: AWS::EC2::Route
  #   Properties:
  #     RouteTableId:
  #       Ref: RouteTable
  #     DestinationCidrBlock: 0.0.0.0/0
  #     GatewayId:
  #       Ref: InternetGateway

# Outputs:
  # VPCId:
  #   Description: Id of the VPC
  #   Value:
  #     Ref: VPC
  #   Export:
  #     Name: VPCID
  # Subnet1ID:
  #   Description: Id of Subnet1
  #   Value:
  #     Ref: Subnet1
  #   Export:
  #     Name: Subnet1ID
  # Subnet2ID:
  #   Description: Id of Subnet2
  #   Value:
  #     Ref: Subnet2
  #   Export:
  #     Name: Subnet2ID
  # EC2ID:
  #   Description: Id of the EC2
  #   Value:
  #     Ref: EC2
  #   Export:
  #     Name: EC2ID
  # EC2PrivateIP:
  #   Description: Private Ip of the EC2
  #   Value:
  #     Fn::GetAtt: [EC2, PrivateIp]
  #   Export:
  #     Name: EC2PrivateIP
  # EC2PublicIp:
  #   Description: Public Ip of the EC2
  #   Value:
  #     Ref: EIP
  #   Export:
  #     Name: EC2PublicIP
  # EC2SG:
  #   Description: SG of the EC2
  #   Value:
  #     Ref: WebserverSecurityGroup
  #   Export:
  #     Name: EC2SG
        